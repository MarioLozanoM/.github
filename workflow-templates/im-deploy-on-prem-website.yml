# Prerequisites
# 1 - Make sure the az secrets have been added to the environment
# 2 - Make sure the host IIS server has been prepped to accept incoming WinRM Requests
#     See the IIS App Pool action README for more details: https://github.com/im-open/iis-service-action/#readme

name: Deploy On Prem Website
on:
  workflow_dispatch:
    inputs:
      branch-tag-sha:
        description: The branch, tag or sha of the code that should be deployed.
        required: true
      environment:
        description: The environment to deploy to.
        required: true

env:
  PAGERDUTY_SERVICE_IDS: '[ "${{secrets.PAGERDUTY_SERVICE_ID}}" ]' # TODO:  Add your PD Service IDs here, the svc id usually has a format of P0XXXXX
  PAGERDUTY_WINDOW_IN_MIN: 30 # TODO:  Verify the length of your PD Maintenance Window
  PAGERDUTY_WINDOW_DESC: 'Deploying Code to ${{github.event.inputs.environment}} from GitHub Actions' # TODO:  Verify this PD Maintenance Window Description
  DEPLOY_BOARD_NUM: '' # TODO: Add the automated deployment board number or remove if not using an automated deployment project board.
  DOTNET_VERSION: '' # TODO:  Set the .net core version of your project
  PROJECT_ROOT: '' # TODO:  set this to the folder of your web site project. For most projects this will be ./src/ProjectName
  ARTIFACT_NAME: 'Published Site' # TODO:  Set this to the name of the artifact that shows in the workflow's summary section
  ARTIFACT_ZIP: 'artifacts.zip'
  DEPLOY_ZIP: 'published_site.zip'
  WEBSITE_NAME: '' #  TODO: Set the website name for teams updates any place we need to identify the site

jobs:
  validate-input:
    runs-on: [ubuntu-20.04]
    steps:
      # TODO:  Update if you don't use all these deployment environments or have others not listed
      - name: Clean Environment Input
        id: clean-env
        uses: im-open/map-input-action@v1.0.1
        with:
          input: ${{github.event.inputs.environment}}
          input_map: |
            {"DEV": ["Dev", "dev", "d", "development"],
            "QA": ["Qa", "qa", "q"],
            "STAGE": ["Stage", "stg", "s", "stage"],
            "PROD": ["Prod", "prod", "p", "production"],
            "UAT": ["Uat", "uat", "u" ],
            "DEMO": ["Demo", "demo", "o", "demo" ]}
          error_on_no_match: true
          custom_error_message: 'The environment must be DEV, QA, STAGE, PROD, DEMO, UAT'

  # TODO: Decide which environments need to have tech-approval for code promotion,
  # this approval step would be good for environments beyond QA
  tech-approval:
    if: ${{github.clean-env.outputs.mapped_input}} != "DEV" && ${{github.clean-env.outputs.mapped_input}} != "QA"
    runs-on: [ubuntu-20.04]
    environment: tech-approve

  # TODO: Decide which environments need to have qa-approval for code promotion,
  # this approval step would be good for environments beyond QA
  qa-approval:
    if: ${{github.clean-env.outputs.mapped_input}} != "DEV" && ${{github.clean-env.outputs.mapped_input}} != "QA"
    needs: tech-approval
    runs-on: [ubuntu-20.04]
    environment: qa-approve

  # TODO: Decide which environments need to have stakeholder-approval for code promotion,
  # this approval step would be good for the UAT, DEMO and PROD environments
  stakeholder-approval:
    if: ${{github.event.inputs.environment}} == "PROD" || ${{github.event.inputs.environment}} == "DEMO" || ${{github.event.inputs.environment}} == "UAT"
    needs: [tech-approval, qa-approval]
    runs-on: [ubuntu-20.04]
    environment: stakeholder-approve

  build-deploy:
    needs: [tech-approval, qa-approval, stakeholder-approval] # TODO: Update for the approval environments used
    runs-on: [self-hosted, windows-2019]
    environment: ${{github.event.inputs.environment}}
    steps:
      # Building up environment specific vars.  If some of these don't need to be based on the environment,
      # they can be moved to the `env:`` section

      # TODO:  Fill in the iis-server and remove the environments that are not used.
      - name: iis-server
        id: iis-server
        uses: im-open/set-variable-based-on-environment@v1.0.0
        with:
          variable-name: 'IIS_SERVER'
          current-environment: ${{github.event.inputs.environment}}
          dev-value: '' # TODO: Add the dev IIS server or delete if env does not exist
          qa-value: '' # TODO: Add the qa IIS server or delete if env does not exist
          stage-value: '' # TODO: Add the stage IIS server or delete if env does not exist
          prod-value: '' # TODO: Add the prod IIS server or delete if env does not exist
          demo-value: '' # TODO: Add the demo IIS server or delete if env does not exist
          uat-value: '' # TODO: Add the uat IIS server or delete if env does not exist

      # TODO:  Fill in the website-name and remove the environments that are not used.
      - name: website-name
        id: website-name
        uses: im-open/set-variable-based-on-environment@v1.0.0
        with:
          variable-name: 'WEBSITE_NAME'
          current-environment: ${{github.event.inputs.environment}}
          dev-value: '' # TODO: Add the dev website name or delete if env does not exist
          qa-value: '' # TODO: Add the qa website name or delete if env does not exist
          stage-value: '' # TODO: Add the stage website name or delete if env does not exist
          prod-value: '' # TODO: Add the prod website name or delete if env does not exist
          demo-value: '' # TODO: Add the demo website name or delete if env does not exist
          uat-value: '' # TODO: Add the uat website name or delete if env does not exist

      # TODO:  Fill in the app-pool-name and remove the environments that are not used.
      - name: app-pool-name
        id: app-pool-name
        uses: im-open/set-variable-based-on-environment@v1.0.0
        with:
          variable-name: 'APP_POOL_NAME'
          current-environment: ${{github.event.inputs.environment}}
          dev-value: '' # TODO: Add the dev app pool name or delete if env does not exist
          qa-value: '' # TODO: Add the qa app pool name or delete if env does not exist
          stage-value: '' # TODO: Add the stage app pool name or delete if env does not exist
          prod-value: '' # TODO: Add the prod app pool name or delete if env does not exist
          demo-value: '' # TODO: Add the demo app pool name or delete if env does not exist
          uat-value: '' # TODO: Add the uat app pool name or delete if env does not exist

      # TODO:  Fill in the website-host-header and remove the environments that are not used.
      - name: website-host-header
        id: website-host-header
        uses: im-open/set-variable-based-on-environment@v1.0.0
        with:
          variable-name: 'WEBSITE_HOST_HEADER'
          current-environment: ${{github.event.inputs.environment}}
          dev-value: '' # TODO: Add the dev website host header or delete if env does not exist
          qa-value: '' # TODO: Add the qa website host header or delete if env does not exist
          stage-value: '' # TODO: Add the stage website host header or delete if env does not exist
          prod-value: '' # TODO: Add the prod website host header or delete if env does not exist
          demo-value: '' # TODO: Add the demo website host header or delete if env does not exist
          uat-value: '' # TODO: Add the uat website host header or delete if env does not exist

      # TODO:  Fill in the website-path and remove the environments that are not used.
      - name: website-path
        id: website-path
        uses: im-open/set-variable-based-on-environment@v1.0.0
        with:
          variable-name: 'WEBSITE_PATH'
          current-environment: ${{github.event.inputs.environment}}
          dev-value: '' # TODO: Add the dev website path or delete if env does not exist
          qa-value: '' # TODO: Add the qa website path or delete if env does not exist
          stage-value: '' # TODO: Add the stage website path or delete if env does not exist
          prod-value: '' # TODO: Add the prod website path or delete if env does not exist
          demo-value: '' # TODO: Add the demo website path or delete if env does not exist
          uat-value: '' # TODO: Add the uat website path or delete if env does not exist

      # TODO:  Fill in the website-cert-path and remove the environments that are not used.
      - name: website-cert-path
        id: website-cert-path
        uses: im-open/set-variable-based-on-environment@v1.0.0
        with:
          variable-name: 'WEBSITE_CERT_PATH'
          current-environment: ${{github.event.inputs.environment}}
          dev-value: '' # TODO: Add the dev website cert path or delete if env does not exist
          qa-value: '' # TODO: Add the qa website cert path or delete if env does not exist
          stage-value: '' # TODO: Add the stage website cert path or delete if env does not exist
          prod-value: '' # TODO: Add the prod website cert path or delete if env does not exist
          demo-value: '' # TODO: Add the demo website cert path or delete if env does not exist
          uat-value: '' # TODO: Add the uat website cert path or delete if env does not exist

      # TODO:  Fill in the website-cert-friendly-name and remove the environments that are not used.
      - name: website-cert-friendly-name
        id: website-cert-friendly-name
        uses: im-open/set-variable-based-on-environment@v1.0.0
        with:
          variable-name: 'WEBSITE_CERT_FRIENDLY_NAME'
          current-environment: ${{github.event.inputs.environment}}
          dev-value: '' # TODO: Add the dev website cert friendly name or delete if env does not exist
          qa-value: '' # TODO: Add the qa website cert friendly name or delete if env does not exist
          stage-value: '' # TODO: Add the stage website cert friendly name or delete if env does not exist
          prod-value: '' # TODO: Add the prod website cert friendly name or delete if env does not exist
          demo-value: '' # TODO: Add the demo website cert friendly name or delete if env does not exist
          uat-value: '' # TODO: Add the uat website cert friendly name or delete if env does not exist

      # TODO:  Fill in the website-cert-password and remove the environments that are not used.
      - name: website-cert-password
        id: website-cert-password
        uses: im-open/set-variable-based-on-environment@v1.0.0
        with:
          variable-name: 'WEBSITE_CERT_PASSWORD'
          current-environment: ${{github.event.inputs.environment}}
          dev-value: '' # TODO: Add the dev website cert password or delete if env does not exist
          qa-value: '' # TODO: Add the qa website cert password or delete if env does not exist
          stage-value: '' # TODO: Add the stage website cert password or delete if env does not exist
          prod-value: '' # TODO: Add the prod website cert password or delete if env does not exist
          demo-value: '' # TODO: Add the demo website cert password or delete if env does not exist
          uat-value: '' # TODO: Add the uat website cert password or delete if env does not exist

      # TODO:  Fill in the iis-server-service-user for WinRm access to the IIS Server and remove the environments that are not used.
      - name: iis-server-service-user
        id: iis-server-service-user
        uses: im-open/set-variable-based-on-environment@v1.0.0
        with:
          variable-name: 'IIS_SERVER_SERVICE_USER'
          current-environment: ${{github.event.inputs.environment}}
          dev-value: '' # TODO: Add the dev iis server service user or delete if env does not exist
          qa-value: '' # TODO: Add the qa iis server service user or delete if env does not exist
          stage-value: '' # TODO: Add the stage iis server service user or delete if env does not exist
          prod-value: '' # TODO: Add the prod iis server service user or delete if env does not exist
          demo-value: '' # TODO: Add the demo iis server service user or delete if env does not exist
          uat-value: '' # TODO: Add the uat iis server service user or delete if env does not exist

      # TODO:  Fill in the iis-server-service-password for WinRm access to the IIS Server and remove the environments that are not used.
      - name: iis-server-service-password
        id: iis-server-service-password
        uses: im-open/set-variable-based-on-environment@v1.0.0
        with:
          variable-name: 'IIS_SERVER_SERVICE_PASSWORD'
          current-environment: ${{github.event.inputs.environment}}
          dev-value: '' # TODO: Add the dev iis server service password or delete if env does not exist
          qa-value: '' # TODO: Add the qa iis server service password or delete if env does not exist
          stage-value: '' # TODO: Add the stage iis server service password or delete if env does not exist
          prod-value: '' # TODO: Add the prod iis server service password or delete if env does not exist
          demo-value: '' # TODO: Add the demo iis server service password or delete if env does not exist
          uat-value: '' # TODO: Add the uat iis server service password or delete if env does not exist

      # TODO:  Fill in the iis-server-cert-path for WinRm access to the IIS Server and remove the environments that are not used.
      - name: iis-server-cert-path
        id: iis-server-cert-path
        uses: im-open/set-variable-based-on-environment@v1.0.0
        with:
          variable-name: 'IIS_SERVER_CERT_PATH'
          current-environment: ${{github.event.inputs.environment}}
          dev-value: '' # TODO: Add the dev iis server cert path or delete if env does not exist
          qa-value: '' # TODO: Add the qa iis server cert path or delete if env does not exist
          stage-value: '' # TODO: Add the stage iis server cert path or delete if env does not exist
          prod-value: '' # TODO: Add the prod iis server cert path or delete if env does not exist
          demo-value: '' # TODO: Add the demo iis server cert path or delete if env does not exist
          uat-value: '' # TODO: Add the uat iis server cert path or delete if env does not exist

      - name: Open a PagerDuty Maintenance Window
        id: open-window
        uses: im-open/open-pagerduty-maintenance-window@v1.0.0
        with:
          pagerduty-api-key: ${{secrets.PAGERDUTY_API_KEY}}
          description: '${{env.PAGERDUTY_WINDOW_DESC}}'
          minutes: ${{env.PAGERDUTY_WINDOW_IN_MIN}}
          service-ids: ${{env.PAGERDUTY_SERVICE_IDS}}

      - run: |
          echo "The maintenance window ID is: ${{steps.open-window.outputs.maintenance-window-id}}"

      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{env.DOTNET_VERSION}}

      # Uncomment this if the site hasn't been created before
      # This action does work better if the website cert is already installed
      # - name: Create Web Site
      #   uses: im-open/iis-site-create@v1.0.0
      #   with:
      #     server: '${{needs.iis-server.outputs.IIS_SERVER}}'
      #     website-name: '${{needs.website-name.outputs.WEBSITE_NAME}}'
      #     app-pool-name: '${{needs.app-pool-name.outputs.APP_POOL_NAME}}'
      #     website-host-header: '${{needs.website-host-header.outputs.WEBSITE_HOST_HEADER}}'
      #     website-path: '${{needs.website-path.outputs.WEBSITE_PATH}}'
      #     website-cert-path: '${{needs.website-cert-path.outputs.WEBSITE_CERT_PATH}}'
      #     website-cert-friendly-name: '${{needs.website-cert-friendly-name.outputs.WEBSITE_CERT_FRIENDLY_NAME}}'
      #     website-cert-password: '${{needs.website-cert-password.outputs.WEBSITE_CERT_PASSWORD}}'
      #     service-account-id: '${{needs.iis-server-service-user.outputs.IIS_SERVER_SERVICE_USER}}'
      #     service-account-password: '${{needs.iis-server-service-password.outputs.IIS_SERVER_SERVICE_PASSWORD}}'
      #     server-public-key: ${{needs.iis-server-cert-path.outputs.IIS_SERVER_CERT_PATH}}

      # Do NOT upload the DEPLOY_ZIP as an artifact after you've done this!
      # DEPLOY_ZIP will contain all of your sensitive values!
      # If an artifact is uploaded, only upload ARTIFACT_ZIP
      - name: Update appsettings.json with Environment Specific Values
        uses: im-open/add-or-update-json-properties@v1.0.1
        with:
          path-to-json-file: '${{env.PROJECT_ROOT}}/appsettings.json'
          # TODO:  add any appsettings.json items that need to be updated for the environment.  Format:
          # {"SecretName": "SecretValues"},
          # {"Nested.SecretName": "${{secrets.NESTED_SECRET}}"},
          # {"Auth0.ClientId": "${{secrets.AUTH0_CLIENT_ID}}"}
          properties-to-update-or-add: |
            [
            ]

      # TODO:  If config transformation is needed for different environments include environment name
      # For example to perform transformations on a web.config using the web.production.config file:
      # dotnet publish --configuration Release /p:EnvironmentName=Production
      - name: Build and Publish
        working-directory: ${{env.PROJECT_ROOT}}
        run: |
          dotnet build --configuration Release
          dotnet publish -c Release -o ./published_app --no-restore

      - name: Zip the published site for faster deployment and uploads
        working-directory: ${{env.PROJECT_ROOT}}
        # TODO:  If you plan on uploading artifacts, add this line to the run:
        # (cd published_app && zip -r ../${{env.ARTIFACT_ZIP}} . -x */appsettings*.json appsettings*.json)
        run: |
          (cd published_app && zip -r ../${{env.DEPLOY_ZIP}} .)

      - name: Stop App Pool
        id: app-pool-stop
        if: always()
        runs-on: [self-hosted, windows-2019]
        uses: im-open/app-pool-action@v1.0.0
        with:
          action: 'stop'
          server: ${{needs.iis-server.outputs.IIS_SERVER}}
          app-pool-name: ${{needs.app-pool-name.outputs.APP_POOL_NAME}}
          service-account-id: ${{needs.iis-server-service-user.outputs.IIS_SERVER_SERVICE_USER}}
          service-account-password: ${{needs.iis-server-service-password.outputs.IIS_SERVER_SERVICE_PASSWORD}}
          server-public-key: ${{needs.iis-server-cert-path.outputs.IIS_SERVER_CERT_PATH}}

      - name: Deploy deployment package
        if: always() && steps.iis-stop.outcome == 'success'
        uses: 'im-open/deploy-on-prem-web-app@v1.0.0'
        with:
          server: ${{needs.iis-server.outputs.IIS_SERVER}}
          source-zip-file-path: ../${{env.DEPLOY_ZIP}}
          deployment-folder-path: ${{needs.website-path.outputs.WEBSITE_PATH}}
          clean-deployment-folder: 'true'
          service-account-id: ${{needs.iis-server-service-user.outputs.IIS_SERVER_SERVICE_USER}}
          service-account-password: ${{needs.iis-server-service-password.outputs.IIS_SERVER_SERVICE_PASSWORD}}
          server-public-key: ${{needs.iis-server-cert-path.outputs.IIS_SERVER_CERT_PATH}}

      - name: Start App Pool
        if: always() && steps.app-pool-stop.outcome == 'success'
        runs-on: [self-hosted, windows-2019]
        uses: im-open/app-pool-action@v1.0.0
        with:
          action: 'start'
          server: ${{needs.iis-server.outputs.IIS_SERVER}}
          app-pool-name: ${{needs.app-pool-name.outputs.APP_POOL_NAME}}
          service-account-id: ${{needs.iis-server-service-user.outputs.IIS_SERVER_SERVICE_USER}}
          service-account-password: ${{needs.iis-server-service-password.outputs.IIS_SERVER_SERVICE_PASSWORD}}
          server-public-key: ${{needs.iis-server-cert-path.outputs.IIS_SERVER_CERT_PATH}}

      - name: Close the PagerDuty Maintenance Window
        if: always() && steps.open-window.outcome == 'success'
        uses: im-open/close-pagerduty-maintenance-window@v1.0.0
        with:
          pagerduty-api-key: ${{secrets.PAGERDUTY_API_KEY}}
          maintenance-window-id: ${{steps.open-window.outputs.maintenance-window-id}}

      - name: Delete .zip and appsettings file that contains sensitive info
        continue-on-error: true
        working-directory: ${{env.PROJECT_ROOT}}
        run: |
          rm -f ${{env.DEPLOY_ZIP}}
          rm -f published_app
          rm -f appsettings*.json

  update-deployment-board-and-send-teams-notification:
    runs-on: [ubuntu-20.04]
    needs: [deploy-code]
    if: always()
    steps:
      - uses: im-open/workflow-conclusion@v1.0.0
        id: conclusion
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}

      # TODO: Remove if not using an automated deployment project board
      # https://github.com/im-practices/git-er-done/blob/main/actions/deployment-board.md
      - name: Update Deployment Board
        if: always()
        uses: im-open/update-deployment-board@v1.0.1
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          environment: ${{github.event.inputs.environment}}
          board-number: ${{env.DEPLOY_BOARD_NUM}}
          ref: ${{github.event.inputs.branch-tag-sha}}
          deploy-status: ${{steps.conclusion.conclusion}}
          timezone: 'america/denver'

      # TODO: Remove if not sending Teams notifications
      - name: Send Status to Teams
        if: always()
        uses: im-open/microsoft-teams-status-update-action@v1.0.0
        with:
          title: Deploying ${{env.WEBSITE_NAME}} to ${{needs.iis-server.outputs.IIS_SERVER}} # TODO:  Verify title
          workflow-status: ${{steps.conclusion.conclusion}}
          workflow-type: Deploy
          teams-uri: ${{secrets.MS_TEAMS_URI}} # TODO:  Verify this secret exists
          timezone: America/Denver # TODO:  Verify timezone
          # TODO:  Verify the custom facts you want included
          custom-facts: |
            [
              { "name": "Event", "value": "${{github.event_name}}" },
              { "name": "Workflow", "value": "${{github.workflow}}" },
              { "name": "Run", "value": "${{github.run_id}}" }
            ]
          # TODO:  Verify the buttons you want included
          custom-actions: |
            [
              { "name": "View Build Log", "uri": "https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}" }
            ]
